## install express framework globally
npm install -g express-generator

## install nodemon globally
npm i -g nodemon

## create new Express app with AOU Courses Review Portal name
express -e AOU Courses Review Portal

## go to the app directory
cd .\AOU-Courses-Review-Portal\

## make new directory name: models
mkdir models

## make new directory name: Controllers
mkdir controllers

## rename /AOU-Courses-Review-Portal/app.js to /AOU-Courses-Review-Portal/server.js

## change the name also in AOU-Courses-Review-Portal/bin/www 
from var app = require('../app');
to var app = require('../server');

## add this code in /AOU-Courses-Review-Portal/server.js to ensure that the server is listening on the correct port
const port = 3000;

app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});

## we can use the command to run the app
npm run start

## change the name in AOU-Courses-Review-Portal/package.json
from "start": "node ./bin/www"
to "start": "nodemon ./bin/www"


## after the change we can use the command to automatically have the updates
nodemon server

## install dotenv package
npm i dotenv

## create file for git to ignore the files we want to ignore push it to github remote repo
New-Item -Name .gitignore -ItemType File

## create environment file to add what we want on it to secure it and not push it to the remote repo 
New-Item -Name .env -ItemType File

## general gitignore file
# This is a list of rules for ignoring files in every Git repositories on your computer.
# See https://help.github.com/articles/ignoring-files

# Compiled source #
###################
*.class
*.com
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log

# OS generated files #
######################
._*
.DS_Store
.DS_Store?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Testing #
###########
.rspec
capybara-*.html
coverage
pickle-email-*.html
rerun.txt
spec/reports
spec/tmp
test/tmp
test/version_tmp

# node #
########
node_modules

# Rails #
#########
**.orig
*.rbc
*.sassc
.project
.rvmrc
.sass-cache
/.bundle
/db/*.sqlite3
/log/*
/public/system/*
/tmp/*
/vendor/bundle


# Ruby #
########
*.gem
*.rbc
.bundle
.config
.yardoc
_yardoc
doc/
InstalledFiles
lib/bundler/man
pkg
rdoc
tmp

# for a library or gem, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
# Gemfile.lock
# .ruby-version
# .ruby-gemset

# CTags #
#########
tags

# Env #
#######
.env

# Python #
#######
*.pyc
__pycache__/

##
npm install method-override

##
npm install express-session

##
npm install express-flash

##
npm install passport

##
npm install mongoose

##
npm install passport-google-oauth

##
npm install multer

##
npm install cloudinary

##
npm install mongodb@latest

##
